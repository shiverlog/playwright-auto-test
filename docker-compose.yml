# Description : docker-compose.yml - 📌 Docker 실행 환경 정의 파일
# Author : Shiwoo Min
# Date : 2024-04-20

version: '3.9'

networks:
  app_network:
    driver: bridge

volumes:
  e2e_results:
    driver: local
  db-data:
    driver: local

services:
  # Playwright 테스트 실행
  playwright:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: playwright_tests
    restart: always
    networks:
      - app_network
    depends_on:
      common:
        condition: service_started
    volumes:
      - ./test-results:/app/test-results
    working_dir: /app
    environment:
      - HEADLESS=${HEADLESS:-1}
      - DEBUG=${DEBUG:-0}
    command: ['npx', 'playwright', 'test']
    shm_size: '2gb'

  # E2E 테스트 - PC Web
  e2e-pc:
    build:
      context: .
      dockerfile: ./e2e/pc-web/Dockerfile
    environment:
      - NODE_ENV=test
    container_name: e2e-pc
    restart: always
    depends_on:
      common:
        condition: service_started
    networks:
      - app_network
    volumes:
      - ./e2e/pc-web/results:/app/results

  # E2E 테스트 - Mobile Web
  e2e-mw:
    build:
      context: .
      dockerfile: ./e2e/mobile-web/Dockerfile
    environment:
      - NODE_ENV=test
    container_name: e2e-mw
    restart: always
    depends_on:
      common:
        condition: service_started
    networks:
      - app_network
    volumes:
      - ./e2e/mobile-web/results:/app/results

  # E2E 테스트 - Android (AOS)
  e2e-aos:
    build:
      context: .
      dockerfile: ./e2e/android/Dockerfile
    environment:
      - NODE_ENV=test
    container_name: e2e-aos
    restart: always
    depends_on:
      common:
        condition: service_started
    networks:
      - app_network
    volumes:
      - ./e2e/android/results:/app/results

  # E2E 테스트 - iOS
  e2e-ios:
    build:
      context: .
      dockerfile: ./e2e/ios/Dockerfile
    environment:
      - NODE_ENV=test
    container_name: e2e-ios
    restart: always
    depends_on:
      common:
        condition: service_started
    networks:
      - app_network
    volumes:
      - ./e2e/ios/results:/app/results

  # E2E 테스트 - API
  e2e-api:
    build:
      context: .
      dockerfile: ./e2e/api/Dockerfile
    environment:
      - NODE_ENV=test
    container_name: e2e-api
    restart: always
    depends_on:
      common:
        condition: service_started
    networks:
      - app_network
    volumes:
      - ./e2e/api/results:/app/results

  # E2E 테스트 - Speedtest
  speedtest:
    build:
      context: .
      dockerfile: ./speedtest/Dockerfile
    environment:
      - NODE_ENV=test
    container_name: speedtest
    restart: always
    depends_on:
      common:
        condition: service_started
    networks:
      - app_network
    volumes:
      - ./speedtest/results:/app/results

  # Pub/Sub 서비스
  pubsub:
    build:
      context: .
      dockerfile: ./pubsub/Dockerfile
    container_name: pubsub
    restart: always
    depends_on:
      common:
        condition: service_started
    networks:
      - app_network
    volumes:
      - ./pubsub/data:/app/data
    environment:
      - NODE_ENV=production
      - PUBSUB_EMULATOR_HOST=0.0.0.0:8085
    ports:
      - '8085:8085'
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8085']
      interval: 10s
      timeout: 5s
      retries: 5

  # Mosaic DB 서비스
  mosaic-db:
    build:
      context: .
      dockerfile: ./mosaic-db/Dockerfile
    container_name: mosaic-db
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./db/conf.d:/etc/mosaic-db/conf.d
      - ./db/initdb.d:/docker-entrypoint-initdb.d
    ports:
      - '5000:5000'
    environment:
      - NODE_ENV=production
      - DB_HOST=db
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_DATABASE=${DB_DATABASE}
      - DB_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - TZ=${TZ}
